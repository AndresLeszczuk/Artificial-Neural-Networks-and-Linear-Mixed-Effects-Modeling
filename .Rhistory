scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
db_ <- filter(db_, id !=416)
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(-10,120,10))+
scale_y_continuous(breaks = seq(-10,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
db_ <- filter(db_, id !=407)
db_ <- filter(db_, id !=388)
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(-10,120,10))+
scale_y_continuous(breaks = seq(-10,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
db_ <- filter(db_, id !=357)
db_ <- filter(db_, id !=240)
db_ <- filter(db_, id !=200)
db_ <- filter(db_, id !=357)
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(-10,120,10))+
scale_y_continuous(breaks = seq(-10,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
summary(lm(fitted~observed, db_))
db_ <- filter(db_, id !=115)
db_ <- filter(db_, id !=95)
db_ <- filter(db_, id !=253)
db_ <- filter(db_, id !=116)
db_ <- filter(db_, id !=244)
db_ <- filter(db_, id !=254)
db_ <- filter(db_, id !=6)
db_ <- filter(db_, id !=416)
db_ <- filter(db_, id !=407)
db_ <- filter(db_, id !=388)
db_ <- filter(db_, id !=240)
db_ <- filter(db_, id !=200)
db_ <- filter(db_, id !=357)
summary(lm(fitted~observed, db_))
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(-10,120,10))+
scale_y_continuous(breaks = seq(-10,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
#geom_text()+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
#geom_text()+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p6
p6 <- ggplot(db_ , aes(fitted, observed,  color = dummy, label = id))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
#geom_text()+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12))+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
annotate(geom = "text", x = 35, y = 110, label = "R² = 0.84")+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity fitted , m³/h")+
ylab("Effective productivity observed, m³/h")+
theme(legend.position = "none")
p6
library(readxl)      # read xlxs files
#ibrary(tidyverse)   # data analysis
library(dplyr)
library(ggpubr)      # joins plots in a chart
library(olsrr)       # data influence analysis
library(readxl)      # read xlxs files
#ibrary(tidyverse)   # data analysis
library(dplyr)
library(ggpubr)      # joins plots in a chart
library(olsrr)       # data influence analysis
library(MuMIn)       # explore differents model aprox
library(nlme)        # mixed effects models
library(lmtest)      # homocedasticity
library(relaimpo)    # relative importance factors in model
data <- read_excel("E:/Investigacion/0-Propia/TESIS_DOCTORAL/CAPITULO II/1-Data/BBDDFW_V1.xlsx")
data$vol_i <- data$Vol_i         # Log volume
data$vol_t <- data$VOL_TOT       # Load volume
data$de    <- data$DE            # extraction distance
data$con   <- data$Conc_trozas   # log concentration
data$eng <- data$Potencia_HP * 0.7457 # convert hp to kw
data <- data %>% filter(OUT == 0) # Filter data for Outlier
data <- data %>% filter_at(vars(de,con), all_vars(!is.na(.))) # filter values of NA data
apply(data[,(c(3,46:50))],2,function(x) sum(is.na(x)))
data <- data %>% filter(ID != 95 )
data <- data %>% filter(ID != 115 )
data <- data %>% filter(ID != 116 )
ggplot(data, aes(Forwarder, PEF))+
geom_boxplot()+
geom_point()+
theme(panel.grid.major = element_line(colour = "grey"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 14))+
xlab("Forwarder")+
ylab("Efective productivity, m³/PMH")
data <- data %>% filter(ID != 128)
data <- data %>% filter(ID != 141)
p1_ <- ggplot(data, aes(N_Trozas,Vol_i, color = VOL_TOT))+
geom_point(size = 4)+
scale_colour_gradientn(colours = terrain.colors(10))+
theme(panel.grid.major = element_line(colour = "grey"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
#legend.position = c(300, .4),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 14))+
guides(color = guide_legend(title = "Load volumen, m³"))+
xlab("Number of log")+
ylab("Log volume, m³")
p1_
p2_ <- ggplot(data, aes(N_Pinzadas,Vol_i, color = VOL_TOT))+
geom_point(size = 4)+
scale_colour_gradientn(colours = terrain.colors(10))+
theme(panel.grid.major = element_line(colour = "grey"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
#legend.position = c(300, .4),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 14))+
xlab("Grapple cycles")+
ylab("Log volume, m³")
p2_
p_1_2 <- ggarrange(p1_,p2_,
labels = c("A", "B"),
ncol = 2)
p_1_2
generalMod <- lm(PEF~de+vol_i+vol_t+con+eng, data) # fit general model
options(na.action=na.pass)
dd <- (dredge(generalMod , extra=c("adjR^2", "AIC")))
(indicadores.regresion <- dd[order(dd$AICc),])
relmm <- calc.relimp(generalMod, type = c("lmg", "last", "first"))
relmm
barplot(relmm$lmg) # plo for relative importance
#generate a bar plot for relative importance
relative_data <- data.frame() #create a empty data frame
relative_data <- matrix(relmm$lmg, ncol = 1, byrow = T) #convert a vector in a matrix
colnames(relative_data) <- "Relative_imp" # asignate a column names
relative_variables <- c("Extraction distance (m)", "Log volume (m³)", "Total load volume (m³)", "Log concentration (m³/m)", "Power engine (kW)") # create a vector for variables names
relative_data <- data.frame(round(relative_data,2),relative_variables) # join all data in data frame
ggplot(relative_data)+
geom_bar(aes(x =relative_variables ,y =Relative_imp), stat = 'identity')+
xlab("Variable")+
ylab("Relative importance")
mod <- lm(PEF~de+vol_i+vol_t, data) # fit general model
relm <- calc.relimp(mod, type = c("lmg", "last", "first"))
relm
barplot(relm$lmg) # plo for relative importance
#generate a bar plot for relative importance
relative_data <- data.frame() #create a empty data frame
relative_data <- matrix(relm$lmg, ncol = 1, byrow = T) #convert a vector in a matrix
colnames(relative_data) <- "Relative_imp" # asignate a column names
relative_variables <- c("Extraction distance (m)", "Log volume (m³)", "Total load volume (m³)") # create a vector for variables names
relative_data <- data.frame(round(relative_data,3),relative_variables) # join all data in data frame
ggplot(relative_data)+
geom_bar(aes(x =relative_variables ,
y =Relative_imp*100),
position = 'dodge',
stat = 'identity',
fill ="lightgrey")+
geom_text(aes(x =relative_variables ,
y =Relative_imp,
label = paste(Relative_imp*100,'%') ),
position=position_dodge(width=1),
vjust=c(-7,-25,-17))+
xlab("Variable")+
ylab("Relative importance")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 14))
modmm <- lme(log(PEF)~log(de)+log(vol_i)+vol_t, random = ~1|Fecha, data)
#modmm <- lme(PEF~de+vol_i+vol_t, random = ~1|Fecha, data)
summary(modmm)
coefficients(modmm)
anova(modmm)
res <- residuals(modmm, type = "normalized")
fit <- fitted(modmm)
par(mfrow = c(2,2))
plot(res~fit, xlab="Fitted values", ylab="Residuals", main="Residuals vs. fitted" )
abline(h=0)
plot(res~data$vol_i, xlab="Log volume", ylab="Residuals", main = "PEF")
abline(h=0)
hist(res, main="Histogram of residuals", xlab="Residuals")
qqnorm(res)
qqline(res)
par(mfrow = c(1,1))
pr.lm <- predict(modmm,data)
MSE.lm <- sum((pr.lm - data$PEF)^2)/nrow(data)
MSE.lm
#AIC
2*(6 + logLik(modmm))
cor(pr.lm,data$PEF)
# confusion Matrix $Misclassification error -Training data
df1 <- data.frame(exp(fitted(modmm)), data$PEF, data$ID)
df1$dummy <- "dummy"
res <- residuals(modmm, type  = 'response')
#standard_res <- rstandard(modmm)
df1$res <- res
#df1 <- data.frame(fitted(modmm), data$PEF)
colnames(df1) <- c("fitted", "predict", "ID","dummy","res")
summary(lm(predict~fitted, df1))
names(df1)
ggplot(df1, aes(predict,fitted, label = ID))+
geom_point()+
geom_text()+
xlab("Ajusted for Neural Network")+
ylab("Observed productivity")+
geom_smooth(formula = y~x, method = "lm", se = F)+
geom_abline(intercept = 0, slope = 1)+
expand_limits(x=c(0,120), y=c(0, 120))
p1 <- ggplot(df1 , aes(fitted,predict,  color = dummy))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
annotate(geom = "text", x = 35, y = 90, label = "R² = 0.80")+
#geom_text()+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12),
#axis.text.x=element_blank(),
axis.title.x=element_blank())+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
xlab("Effective productivity predicted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p2 <- ggplot(data, aes(res))+
ylab("Frecuency of residuals")+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12),
#axis.text.x=element_blank(),
axis.title.x=element_blank())+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
theme(legend.position = "none")+
geom_histogram(bins = 25  )
p2
p12 <- ggarrange(p1,p2,
labels = c("A", "B"),
ncol = 2)
p12
p1 <- ggplot(df1 , aes(fitted,predict,  color = dummy))+
geom_point(shape = 21, fill = "lightgray", size = 3.5)+
geom_smooth(method = "lm", formula = y~x, se = F)+
geom_abline(intercept = 0, slope = 1)+
annotate(geom = "text", x = 35, y = 90, label = "R² = 0.80")+
#geom_text()+
theme(panel.grid.major = element_line(colour = "black"),
panel.border = element_rect(linetype = 1, fill = NA),
panel.background = element_rect(fill = "white"),
legend.position = c(.95, .25),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
text = element_text(size = 12),
#axis.text.x=element_blank(),
axis.title.x=element_blank())+
scale_fill_manual(values = c('#757474'))+
scale_colour_manual(values = c('#757474'))+
expand_limits(x=c(10,50),y=c(10,50))+
scale_x_continuous(breaks = seq(0,120,10))+
scale_y_continuous(breaks = seq(0,120,10))+
xlab("Effective productivity predicted , m³/PMH")+
ylab("Effective productivity observed, m³/PMH")+
theme(legend.position = "none")
p1
